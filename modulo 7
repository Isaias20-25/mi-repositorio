import java.util.InputMismatchException;
import java.util.Scanner;

public class modulo 7{

    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        double[] resultados = new double[100];
        int contadorResultados = 0;
        boolean continuar = true;

        System.out.println("=== Calculadora Geométrica con Potencia ===");

        while (continuar) {
            try {
                int figura = elegirFigura();
                int operacion = elegirOperacion();

                double resultado = realizarOperacion(figura, operacion);

                // Guardar resultado
                resultados[contadorResultados++] = resultado;

                // Mostrar resultado
                System.out.printf("\nResultado de la operación: %.2f\n", resultado);

                // Preguntar si desea otra operación
                System.out.print("\n¿Deseas realizar otra operación? (s/n): ");
                String respuesta = scanner.next();
                if (!respuesta.equalsIgnoreCase("s")) {
                    continuar = false;
                }

            } catch (InputMismatchException e) {
                System.out.println("Error: Entrada inválida. Ingresa números válidos.");
                scanner.nextLine(); // limpiar
            }
        }

        mostrarResultados(resultados, contadorResultados);
        System.out.println("\n¡Gracias por usar la calculadora!");
        scanner.close();
    }

    // Método para elegir la figura
    public static int elegirFigura() {
        System.out.println("\nFiguras disponibles:");
        System.out.println("1. Círculo");
        System.out.println("2. Cuadrado");
        System.out.println("3. Triángulo");
        System.out.println("4. Rectángulo");
        System.out.println("5. Pentágono");
        System.out.print("\nElige una figura (1-5): ");
        return scanner.nextInt();
    }

    // Método para elegir la operación
    public static int elegirOperacion() {
        System.out.println("\nOperaciones disponibles:");
        System.out.println("1. Área");
        System.out.println("2. Perímetro");
        System.out.println("3. Potencia (nuevo)");

        System.out.print("\nElige una operación (1-3): ");
        return scanner.nextInt();
    }

    // Método para realizar la operación
    public static double realizarOperacion(int figura, int operacion) {
        double resultado = 0.0;

        if (operacion == 3) { // Potencia
            System.out.print("Ingresa la base: ");
            int base = scanner.nextInt();
            System.out.print("Ingresa el exponente: ");
            int exponente = scanner.nextInt();
            resultado = calcularPotencia(base, exponente);
        } else {
            switch (figura) {
                case 1: // Círculo
                    System.out.print("Ingresa el radio del círculo: ");
                    double radio = scanner.nextDouble();
                    if (operacion == 1) {
                        resultado = calcularAreaCirculo(radio);
                    } else if (operacion == 2) {
                        resultado = calcularPerimetroCirculo(radio);
                    }
                    break;

                case 2: // Cuadrado
                    System.out.print("Ingresa el lado del cuadrado: ");
                    double lado = scanner.nextDouble();
                    if (operacion == 1) {
                        resultado = calcularAreaCuadrado(lado);
                    } else if (operacion == 2) {
                        resultado = calcularPerimetroCuadrado(lado);
                    }
                    break;

                case 3: // Triángulo
                    if (operacion == 1) {
                        System.out.print("Ingresa la base del triángulo: ");
                        double baseT = scanner.nextDouble();
                        System.out.print("Ingresa la altura del triángulo: ");
                        double altura = scanner.nextDouble();
                        resultado = calcularAreaTriangulo(baseT, altura);
                    } else if (operacion == 2) {
                        System.out.print("Ingresa el lado 1 del triángulo: ");
                        double lado1 = scanner.nextDouble();
                        System.out.print("Ingresa el lado 2 del triángulo: ");
                        double lado2 = scanner.nextDouble();
                        System.out.print("Ingresa el lado 3 del triángulo: ");
                        double lado3 = scanner.nextDouble();
                        resultado = calcularPerimetroTriangulo(lado1, lado2, lado3);
                    }
                    break;

                case 4: // Rectángulo
                    System.out.print("Ingresa la base del rectángulo: ");
                    double baseR = scanner.nextDouble();
                    System.out.print("Ingresa la altura del rectángulo: ");
                    double alturaR = scanner.nextDouble();
                    if (operacion == 1) {
                        resultado = calcularAreaRectangulo(baseR, alturaR);
                    } else if (operacion == 2) {
                        resultado = calcularPerimetroRectangulo(baseR, alturaR);
                    }
                    break;

                case 5: // Pentágono
                    if (operacion == 1) {
                        System.out.print("Ingresa el lado del pentágono: ");
                        double ladoP = scanner.nextDouble();
                        System.out.print("Ingresa el apotema del pentágono: ");
                        double apotema = scanner.nextDouble();
                        resultado = calcularAreaPentagono(ladoP, apotema);
                    } else if (operacion == 2) {
                        System.out.print("Ingresa el lado del pentágono: ");
                        double ladoP = scanner.nextDouble();
                        resultado = calcularPerimetroPentagono(ladoP);
                    }
                    break;

                default:
                    System.out.println("Figura no válida.");
                    break;
            }
        }

        return resultado;
    }

    // Métodos de cálculo
    public static double calcularAreaCirculo(double radio) {
        return Math.PI * radio * radio;
    }

    public static double calcularPerimetroCirculo(double radio) {
        return 2 * Math.PI * radio;
    }

    public static double calcularAreaCuadrado(double lado) {
        return lado * lado;
    }

    public static double calcularPerimetroCuadrado(double lado) {
        return 4 * lado;
    }

    public static double calcularAreaTriangulo(double base, double altura) {
        return (base * altura) / 2;
    }

    public static double calcularPerimetroTriangulo(double lado1, double lado2, double lado3) {
        return lado1 + lado2 + lado3;
    }

    public static double calcularAreaRectangulo(double base, double altura) {
        return base * altura;
    }

    public static double calcularPerimetroRectangulo(double base, double altura) {
        return 2 * (base + altura);
    }

    public static double calcularAreaPentagono(double lado, double apotema) {
        return (5 * lado * apotema) / 2;
    }

    public static double calcularPerimetroPentagono(double lado) {
        return 5 * lado;
    }

    // Método recursivo para calcular la potencia
    public static int calcularPotencia(int base, int exponente) {
        if (exponente == 0) {
            return 1;
        } else {
            return base * calcularPotencia(base, exponente - 1);
        }
    }

    // Método para mostrar todos los resultados
    public static void mostrarResultados(double[] resultados, int contador) {
        System.out.println("\nResultados de Todas las Operaciones");
        for (int i = 0; i < contador; i++) {
            System.out.printf("Operación #%d: %.2f\n", (i + 1), resultados[i]);
        }
    }
}
